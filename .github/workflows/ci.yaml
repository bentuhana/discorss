name: CI

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - ".github/workflows/ci.yaml"
  pull_request:
    branches:
      - main
    paths:
      - "src/**"
      - ".github/workflows/ci.yaml"

jobs:
  lint_and_build:
    name: Lint and Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - beta
          - nightly
        target:
          - x86_64-unknown-linux-musl
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install musl-tools package
        if: ${{ matrix.target }} == 'x86_64-unknown-linux-musl'
        run: sudo apt install musl-tools

      - name: Install ${{ matrix.toolchain }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          default: true
          override: true
          profile: default

      - name: Run clippy linter
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ github.token }}
          args: --verbose

      - name: Build project
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload built binary
        uses: actions/upload-artifact@v3
        with:
          name: discorss ${{ matrix.toolchain }}-${{ matrix.target }}
          path: target/x86_64-unknown-linux-musl/release/discorss

  container_image:
    name: Create container image
    runs-on: ubuntu-latest
    needs: lint_and_build
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to ghcr.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: ghcr.io/${{ github.repository_owner }}

      - name: Trim commit SHA
        run: echo "GITHUB_SHA_CUT=$(echo $GITHUB_SHA | cut -c1-7)" >>$GITHUB_ENV

      - name: Build container image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: discorss-rs
          tags: main-${{ env.GITHUB_SHA_CUT }}
          containerfiles: |
            ./Containerfile

      - name: Push to ghcr.io
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
